pip install tensorflow
import tensorflow as tf
from tensorflow.keras import layers, models
from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

# 加载数据集
digits = load_digits()
X = digits.data
y = digits.target

# 数据集划分
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 数据标准化
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# 构建神经网络模型
model = models.Sequential([
    layers.InputLayer(input_shape=(X_train.shape[1],)), # 输入层，输入数据的维度
    layers.Dense(64, activation='relu'),  # 隐藏层1
    layers.Dense(64, activation='relu'),  # 隐藏层2
    layers.Dense(10, activation='softmax')  # 输出层, 分类为10类（数字0-9）
])

# 编译模型
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',  # 适用于多分类
              metrics=['accuracy'])

# 训练模型
model.fit(X_train, y_train, epochs=20, batch_size=32, validation_data=(X_test, y_test))

# 评估模型
test_loss, test_acc = model.evaluate(X_test, y_test)
print(f"Test accuracy: {test_acc}")
